[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-13 13:43:05.580378",
  "module": null,
  "name": "Lead-Form",
  "script": "function update_tags_and_request_details(frm){\n    if (!frm.is_new()) {\n        frappe.call({\n            method: \"gia_events.api.update_tags_and_request_details\",\n            args: {\n                \"lead\": frm.doc.name,\n                \"project\": frm.doc.project,\n                \"event\": frm.doc.event,\n            },\n            callback(r){\n                    // console.log('rr', r.message);\n                if (r.message && r.message == \"refresh\"){\n                    frm.refresh_fields([\n                        \"first_request\", \n                        \"first_request_entry\", \n                        \"latest_request_date\", \n                        \"latest_request_entry\",\n                        \"request_details\", \n                        \"project\",\n                        // ... plus all other core fields that might have been updated\n                        \"event\", \"type\", \"request_type\", \"phone\", \"first_name\", \n                        \"last_name\", \"company_name\", \"source\", \"city\", \"address\"\n                    ]);\n                    // console.log('refrshed');\n                    \n                    cur_frm.reload_doc();\n                }\n            }\n        });\n    }\n}\n\nfrappe.ui.form.on('Lead', {\n    \n\trefresh: function(frm) {\n        frm.add_custom_button(__(\"Call\"), function(){\n            //console.log(\"Call to \" + $(\"#phone\").val());\n            \n            if($(\"#phone\").val() !== \"...\"){\n                frappe.call({\n                    method: \"gia_events.api.make_call\",\n                    args: {\n                        \"to_number\": frm.doc.lead_number,\n                        \"logged_in_user\": frappe.session.user\n                    }\n                });\n\t\t    }\n        });\n        \n        update_tags_and_request_details(frm);\n    },\n\tafter_save: function(frm){\n\t    //update tags\n\t    update_tags_and_request_details(frm);\n        cur_frm.reload_doc();\n\t},\n\tfirst_name: function(frm){\n\t    //First and last name is undefined so set full name to empty string\n\t    if(frm.doc.first_name === undefined && frm.doc.last_name === undefined){\n\t        frm.set_value('lead_name', \"\");\n\t    }\n\t    \n\t    //First name is set and last name is not, set full name to first name only\n\t    else if(frm.doc.first_name !== undefined && frm.doc.last_name === undefined){\n\t        frm.set_value('lead_name', frm.doc.first_name);\n\t    }\n\t    \n\t    //Last name is set and first name is not, so det full name to last name\n\t    else if(frm.doc.first_name === undefined && frm.doc.last_name !== undefined){\n\t        frm.set_value('lead_name', frm.doc.last_name);\n\t    }\n\t    \n\t    //Both first and last names are set so set full name to first and last name\n\t    else{\n\t        frm.set_value('lead_name', frm.doc.first_name + \" \" + frm.doc.last_name);\n\t    }\n\t    /*let person_name = frm.doc.first_name + \" \" + frm.doc.last_name;\n\t\tfrm.set_value('lead_name', person_name);*/\n\t},\n\t\n\tlast_name: function(frm){\n\t    //First and last name is undefined so set full name to empty string\n\t    if(frm.doc.first_name === undefined && frm.doc.last_name === undefined){\n\t        frm.set_value('lead_name', \"\");\n\t    }\n\t    \n\t    //First name is set and last name is not, set full name to first name only\n\t    else if(frm.doc.first_name !== undefined && frm.doc.last_name === undefined){\n\t        frm.set_value('lead_name', frm.doc.first_name);\n\t    }\n\t    \n\t    //Last name is set and first name is not, so det full name to last name\n\t    else if(frm.doc.first_name === undefined && frm.doc.last_name !== undefined){\n\t        frm.set_value('lead_name', frm.doc.last_name);\n\t    }\n\t    \n\t    //Both first and last names are set so set full name to first and last name\n\t    else{\n\t        frm.set_value('lead_name', frm.doc.first_name + \" \" + frm.doc.last_name);\n\t    }\n\t    /*let person_name = frm.doc.first_name + \" \" + frm.doc.last_name;\n\t\tfrm.set_value('lead_name', person_name);*/\n\t}\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Call Log GIA",
  "enabled": 1,
  "modified": "2021-10-14 18:16:20.369872",
  "module": null,
  "name": "Call Log GIA-Form",
  "script": "frappe.ui.form.on('Call Log GIA', {\n\trefresh(frm) {\n\t\tfrappe.call({\n\t\t    method: \"gia_events.api.call_logs\",\n\t\t    callback: (r) => {\n\t\t        console.log(r.message)\n\t\t        $.each(r.message, function(index, log){\n\t\t            $(\"#logs\").append(\"<tr><td>\" + log.from_ + \"</td><td>\" + log.to + \"</td><td>\" + log.duration + \"</td><td>\" + log.status + \"</td></tr>\")\n\t\t        })\n\t\t    }\n\t\t    })\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Newsletter",
  "enabled": 1,
  "modified": "2022-02-21 14:27:40.785144",
  "module": null,
  "name": "Newsletter-Form",
  "script": "frappe.ui.form.on('Newsletter Email Group', {\n\temail_group(frm, cdt, cdn) {\n\t    let row = frappe.get_doc(cdt, cdn);\n\t\tfrappe.call({\n\t\t    method: \"gia_events.api.count_subscribers\",\n\t\t    args: {\n\t\t        'email_group': row.email_group\n\t\t        \n\t\t    },\n\t\t    callback: (response) => {\n\t\t        let row = frappe.get_doc(cdt, cdn);\n\t\t        frappe.model.set_value(row.doctype, row.name, \"total_subscribed\", response.message[0]);\n\t\t        frappe.model.set_value(row.doctype, row.name, \"total_unsubscribed\", response.message[1]);\n\t\t        \n\t\t    }\n\t\t    \n\t\t});\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2025-10-13 13:46:54.000213",
  "module": null,
  "name": "Update Lead Tags",
  "script": "frappe.listview_settings['Lead'] = {\n    refresh: function(listview) {\n        // Add a button to the list view toolbar\n        listview.page.add_inner_button(__(\"Update Missing Values\"), function() {\n            // Call the Python method via Frappe API\n            frappe.call({\n                method: \"gia_events.api.set_empty_lead_tags\",\n                args: {\n                    from_list: true\n                },\n                // Prevents automatic display of default server-side messages\n                freeze: true,\n                callback: (r) => {\n                    if (Array.isArray(r.message)) {\n                        let stats = r.message;\n                        let updated_count = stats[1] || 0; \n                        let remaining_count = stats[2] || 0;\n                        \n                        let msg = \"Updated Tags, Requests, and Projects in \" + updated_count + \" Leads.\";\n\n                        if (remaining_count > 0){\n                            msg = msg + \" \" + remaining_count + \" remaining. Run again to update the remainder.\";\n                        }\n                        \n                        // Use setTimeout to guarantee the message displays *after* the refresh\n                        setTimeout(() => {\n                            frappe.msgprint({\n                                title: __(\"Tag Reset Complete\"),\n                                message: msg,\n                                indicator: 'green'\n                            });\n                        }, 1); // A minimal delay ensures message renders fully\n\n                    } else {\n                        // Handle simple messages or other server responses\n                        if (r.message) {\n                            frappe.msgprint(r.message);\n                        }\n                    }\n                    \n                    listview.refresh(); \n                }\n            });\n        }, __(\"Manage\")); // Group the button under \"Manage\"\n\n        // Change the appearance of the newly added button group\n        listview.page.get_inner_group_button(\"Manage\")\n            .find(\"button\")\n            .removeClass(\"btn-default\")\n            .addClass(\"btn-secondary\");\n    },\n};",
  "view": "List"
 }
]